local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = "Esan HUB by Dextralon",
	Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
	LoadingTitle = "Esan HUB Loading",
	LoadingSubtitle = "by Dextralon",
	Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

	DisableRayfieldPrompts = false,
	DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},

	Discord = {
		Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
		Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
		RememberJoins = true -- Set this to false to make them join the discord every time they load it up
	},

	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Untitled",
		Subtitle = "Key System",
		Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
		FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
		SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
	}
})

local Tab = Window:CreateTab("Main (Skill issue LOl)", "angry") -- Title, Image

local datarequire = require(game:GetService("ReplicatedStorage").Packages.Knit)

Tab:CreateToggle({
	Name = "Bring Ball(op)",
	CurrentValue = false,
	Callback = function(Value)
		LoopBall = Value
		task.spawn(function()
			while LoopBall and task.wait(0.4) do
				xpcall(function()
					workspace.Junk.Football.CFrame = game.Players.LocalPlayer.Character.Hitbox.CFrame
				end,print)
			end
		end)
	end,
})

Tab:CreateSlider({
	Name = "X",
	Range = {0, 1000},
	Increment = 1,
	Suffix = "X",
	CurrentValue = 10,
	Callback = function(Value)
		X = Value
	end,
})
Tab:CreateSlider({
	Name = "Y",
	Range = {0, 1000},
	Increment = 1,
	Suffix = "Y",
	CurrentValue = 10,
	Callback = function(Value)
		Y = Value
	end,
})

Tab:CreateSlider({
	Name = "Z",
	Range = {0, 1000},
	Increment = 1,
	Suffix = "Z",
	CurrentValue = 10,
	Callback = function(Value)
		Z = Value
	end,
})

Tab:CreateSlider({
	Name = "Transparency",
	Range = {0, 1},
	Increment = 0.1,
	Suffix = "Transparency",
	CurrentValue = 0,
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Hitbox.Transparency = Value
	end,
})

task.spawn(function()
	while task.wait() do 
		pcall(function()
			game.Players.LocalPlayer.Character.Hitbox.Size = Vector3.new(X,Y,Z)
		end)
	end
end)

local Tab = Window:CreateTab("LocalPlayer", "angry")

Tab:CreateToggle({
	Name = "Inf Satmina",
	CurrentValue = false,
	Callback = function(Value)
		InfSatmina = Value
	end,
})
task.spawn(function()
	local a = require(game:GetService("ReplicatedStorage").Packages.Knit)

	while task.wait()  do
		if InfSatmina then
			a.SharedInterfaceStates.Stamina.Amount:set(math.huge)
		end
	end
end)

Tab:CreateSlider({
	Name = "Speed bypass",
	Range = {0, 100},
	Increment = 1,
	Suffix = "Speed",
	CurrentValue = 0,
	Callback = function(Value)
		Speed = Value
    end,
})

local mt = getrawmetatable(game)
local backupnamecall = mt.__namecall
setreadonly(mt, false)
mt.__namecall = newcclosure(function(...)
    local method = getnamecallmethod()
    local args = {...}
    if string.lower(method) == "kick" then
        return nil
    end
    return backupnamecall(...)
end)
setreadonly(mt, true)

local a = require(game:GetService("ReplicatedStorage").Packages.Knit)
a.Defaults.Movement.WalkSpeed = Speed
